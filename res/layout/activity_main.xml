<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" >

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:text="以下是目前为止学过的android知识，\n点击查看详情"
        android:textColor="#00aaaa" />

    <ListView
        android:id="@+id/lv"
        android:layout_width="match_parent"
        android:layout_height="317dp"
        android:minHeight="20dp"
        android:padding="1dp" />
<ScrollView
    android:layout_height="wrap_content"
    android:layout_width="wrap_content">

    <TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="6076dp"
        android:layout_margin="15dp"
        android:text="
    HACKED-BY-ARTORIA丶\n——2016.4.25\n
public class MainActivity extends Activity {
	

	public static class DatePickerFragment extends DialogFragment implements
			DatePickerDialog.OnDateSetListener {

		@Override
		public Dialog onCreateDialog(Bundle savedInstanceState) {
			// TODO Auto-generated method stub

			final Calendar c = Calendar.getInstance();
			int year = c.get(Calendar.YEAR);
			int month = c.get(Calendar.MONTH);
			int day = c.get(Calendar.DAY_OF_MONTH);
			DatePickerDialog t = new DatePickerDialog(getActivity(), this,
					year, month, day);
			return t;
		}

		@Override
		public void onDateSet(DatePicker v, int year, int month, int day) {
			// TODO Auto-generated method stub
			Toast.makeText(getActivity(),
					&apos;你选的日期是&apos; + year + &apos;年&apos; + month + &apos;月&apos; + day + &apos;日&apos;,
					Toast.LENGTH_SHORT).show();
		}

	}

	private ListView listprefer;
	Intent it = new Intent();
	public String[] dialog = new String[] { &apos;SingleChoiceItems&apos;,
			&apos;MultiChoiceItems&apos;, &apos;DatePickerFragment&apos;, &apos;ProgressDialog&apos;,
			&apos;MyDialog&apos; };
	public  String[] learend =/*getResources().getStringArray(R.array.Studed);*/ new String[] { &apos;Intent&apos;, &apos;AlertDialog&apos;,
			&apos;AutoComepleteTextView&apos;, &apos;Progressbar&apos;, &apos;MyToast&apos;, &apos;ItemDialog&apos;,
			&apos;SingleChoiceItems&apos;, &apos;MultiChoiceItems&apos;, &apos;DatePickerFragment&apos;,
			&apos;ProgressDialog&apos;, &apos;MyDialog&apos;, &apos;Notification&apos;,&apos;Spinner&apos;,&apos;SimpleAdapterlistview&apos; };

	public void alertdialog(int itemposition) {
		final AlertDialog.Builder buildermore = new AlertDialog.Builder(
				MainActivity.this);
		switch (itemposition) {
		case 5: {
			buildermore.setItems(dialog, new DialogInterface.OnClickListener() {

				@Override
				public void onClick(DialogInterface arg0, int arg1) {
					// TODO Auto-generated method stub

				}
			});
			break;

		}
		case 6: {
			buildermore.setSingleChoiceItems(dialog, 0,
					new DialogInterface.OnClickListener() {

						@Override
						public void onClick(DialogInterface arg0, int arg1) {
							// TODO Auto-generated method stub

						}
					});
			break;
		}
		case 7: {
			buildermore.setMultiChoiceItems(dialog, new boolean[] { false,
					false, false, false, false },
					new DialogInterface.OnMultiChoiceClickListener() {

						@Override
						public void onClick(DialogInterface arg0, int arg1,
								boolean arg2) {
							// TODO Auto-generated method stub

						}
					});
			break;
		}
		case 8: {
			DatePickerFragment dpf = new DatePickerFragment();
			dpf.show(getFragmentManager(), &apos;datePicker&apos;);
			break;
		}
		case 9: {
			final Handler mytimePickerHandler = new Handler();
			final ProgressDialog pb = new ProgressDialog(MainActivity.this);
			pb.setTitle(&apos;Title&apos;);
			pb.setMax(100);
			pb.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
			pb.show();

			new Thread() {
				@Override
				public void run() {
					for (int i = 0; i &lt;= 100; i++) {
						try {
							Thread.sleep(100);
						} catch (Exception e) {
						}
						final int setprogress = i;
						mytimePickerHandler.post(new Runnable() {

							@Override
							public void run() {
								// TODO Auto-generated method stub
								pb.setProgress(setprogress);
								if (setprogress == 100) {
									Toast.makeText(getApplicationContext(),
											&apos;读条结束了&apos;, Toast.LENGTH_SHORT).show();
								}
							}
						});
					}

					pb.dismiss();

				}
			}.start();
			break;
		}
		case 10: {
			break;
		}

		}
		AlertDialog showitem = buildermore.create();
		showitem.show();
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		listprefer = (ListView) findViewById(R.id.lv);
		ArrayAdapter&lt;String> adapterlearend = new ArrayAdapter&lt;String>(this,
				R.layout.my_list_view, learend);
		listprefer.setAdapter(adapterlearend);
		listprefer.setOnItemClickListener(myLister);
	}

	private OnItemClickListener myLister = new OnItemClickListener() {

		@Override
		public void onItemClick(AdapterView&lt;?> prant, View v, int position,
				long id) {
			// TODO Auto-generated method stub
			switch (position) {
			case 0: {
				it.setClass(getApplicationContext(), IntentActivity.class);
				startActivity(it);
				// Toast.makeText(getApplicationContext(),
				// &apos;Intent就不用展示了吧&apos;,Toast.LENGTH_SHORT).show();
				break;
			}
			case 1: {
				final AlertDialog.Builder builder = new AlertDialog.Builder(
						MainActivity.this);
				builder.setIcon(R.drawable.ic_launcher);
				builder.setTitle(&apos;AlertDialog&apos;);

				builder.setMessage(&apos;查看代码详情点击确定&apos;);
				builder.setNeutralButton(&apos;Cancle&apos;,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface arg0, int arg1) {

							}
						});
				builder.setNegativeButton(&apos;Yes&apos;,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface arg0, int arg1) {
								it.setClass(getApplicationContext(),
										AlertDialogActivity.class);
								startActivity(it);
							}
						});
				builder.setPositiveButton(&apos;No&apos;,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface arg0, int arg1) {

							}
						});
				AlertDialog show = builder.create();
				show.show();
				break;
			}
			case 2: {
				it.setClass(getApplicationContext(),
						AutoComepleteTextActivity.class);
				startActivity(it);
				break;
			}
			case 3: {
				it.setClass(getApplicationContext(), ProgressbarActivity.class);
				startActivity(it);
				break;
			}
			case 4: {

				Toast.makeText(MainActivity.this, &apos;MyToast&apos;, Toast.LENGTH_SHORT)
						.show();
				break;
			}
			case 5: {// itemdialog
				alertdialog(5);
				break;
			}
			case 6: {// singlechoicedialog
				alertdialog(6);
				break;
			}
			case 7: {// Multichociedialog
				alertdialog(7);
				break;
			}
			case 8: {// Timedatapickerdialog
				alertdialog(8);
				break;
			}
			case 9: {// progressdialog
				alertdialog(9);
				break;
			}
			case 10: {// mydialog
				alertdialog(10);
				break;
			}
			case 11: {// notication
				// Intent intent=new Intent();
				// intent.setClass(getApplicationContext(),
				// NotificationActivity.class);
				PendingIntent pi = PendingIntent.getActivity(MainActivity.this,
						0, getIntent(), 0);
				Notification.Builder notificationBuilder = new Notification.Builder(
						MainActivity.this);
				notificationBuilder.setTicker(&apos;Ticker&apos;);
				notificationBuilder.setContentTitle(&apos;Title&apos;);
				notificationBuilder.setContentText(&apos;Text&apos;);
				notificationBuilder.setContentIntent(pi);
				notificationBuilder.setSmallIcon(R.drawable.ic_launcher);
				Notification notification = notificationBuilder
						.getNotification();
				notification.flags |= Notification.FLAG_AUTO_CANCEL;
				// String notificationService = Context.NOTIFICATION_SERVICE;
				NotificationManager notificationManerager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
				notificationManerager.notify(1, notification);
				break;
			}
			case 12:{//Spinner
				it.setClass(getApplicationContext(),
						SpinnerActivity.class);
				startActivity(it);
				break;
			}
			case 13:{//SimpleAdapterlistview
				it.setClass(getApplicationContext(),
						SimpleadapterActivity.class);
				startActivity(it);
				break;
			}
			}

		}
	};

}
"
        android:textColor="#000000"
        android:textSize="14dp" />

</ScrollView>
</LinearLayout>